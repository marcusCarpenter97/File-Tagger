#include "../src/databaseManager.h"
#include <stdlib.h>

#define RET_VAL_OK EXIT_SUCCESS

const char* tag_name1 = "tag name 1";
const char* tag_name2 = "tag name 2";
const char* tag_name3 = "tag name 3";
const char* tag_name4 = "tag name 4";
const char* tag_name5 = "tag name 5";
const char* tag_name6 = "tag name 6";

const char* path_to_file_param1 = "/home/marcus/Documents/File Tagger/source/src/main.c";
const char* path_to_file_param2 = "/home/marcus/Documents/File Tagger/source/src/stateMachine.c";
const char* path_to_dir_param1 = "/home/marcus/Documents/File Tagger/source/src";
const char* path_to_dir_param2 = "/home/marcus/Documents/File Tagger/source/tests";

void db_setup(void) {
	initialize_database();
}

void db_teardown(void) {
	//Nothing todo here.
}

#suite dbManager

#tcase dbInsert

#test insert_one_tag_one_file
	/*initialize_database();*/
	append_path_to_sql_stmt(path_to_file_param1);
	append_tag_name_to_sql_stmt(tag_name1);
	int ret_val = insert_tags();
	fail_unless(ret_val == 1);

#test insert_one_tag_many_files
	/*initialize_database();*/
	append_path_to_sql_stmt(path_to_file_param2);
	append_path_to_sql_stmt(path_to_dir_param1);
	append_tag_name_to_sql_stmt(tag_name2);
	int ret_val = insert_tags();
	fail_unless(ret_val == 2);

#test insert_many_tags_one_file
	/*initialize_database();*/
	append_path_to_sql_stmt(path_to_file_param1);
	append_tag_name_to_sql_stmt(tag_name3);
	append_tag_name_to_sql_stmt(tag_name4);
	int ret_val = insert_tags();
	fail_unless(ret_val == 2);

#test insert_many_tags_many_files
	/*initialize_database();*/
	append_path_to_sql_stmt(path_to_file_param1);
	append_path_to_sql_stmt(path_to_dir_param2);
	append_tag_name_to_sql_stmt(tag_name5);
	append_tag_name_to_sql_stmt(tag_name6);
	int ret_val = insert_tags();
	fail_unless(ret_val == 4); //number of tags * number of paths

#tcase dbSelect

#test select_all_files_for_one_tag
	/*initialize_database();*/
	append_tag_name_to_sql_stmt(tag_name1);
	Result_table rt = select_all_locations_for_tag();
	ck_assert_msg(rt.table[0][0] != NULL, "Return table is empty.");
	
#test select_all_files_for_many_tags
	/*initialize_database();*/
	append_tag_name_to_sql_stmt(tag_name2);
	append_tag_name_to_sql_stmt(tag_name3);
	Result_table rt = select_all_locations_for_tags();
	ck_assert_msg(rt.table[0][0] != NULL, "Return table is empty.");

#test select_all_tag
	/*initialize_database();*/
	Result_table rt = select_all_tags();
	ck_assert_msg(rt.table[0][0] != NULL, "Return table is empty.");

#test select_all_files
	/*initialize_database();*/
	Result_table rt = select_all_locations();
	ck_assert_msg(rt.table[0][0] != NULL, "Return table is empty.");

#main-pre
	tcase_add_checked_fixture(tc1_1, db_setup, db_teardown);
	tcase_add_checked_fixture(tc1_2, db_setup, db_teardown);

